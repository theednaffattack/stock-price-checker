{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","App","state","response","responseToo","post","stock","like","post2","stock1","like1","stock2","like2","hello","responseToPost","callApi","_callee","e","esc","query","fullUrl","body","regenerator_default","a","wrap","_context","prev","next","preventDefault","encodeURIComponent","Object","keys","_this","map","k","join","console","log","fetch","sent","json","status","Error","message","setState","abrupt","stop","callApiToo","_callee2","buildQuery","_context2","replace","axios","get","concat","data","stockData","handleSubmit","_callee3","_context3","method","headers","Content-Type","JSON","stringify","text","_this2","this","react_default","createElement","className","src","logo","alt","href","target","rel","name","id","onSubmit","value","type","onChange","likes","checked","prevState","stockSymbol","lastRefreshed","timeZone","dailyHigh","props","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.56693bb8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\nimport axios from \"axios\";\n// import cors from \"cors\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nclass App extends Component {\n  state = {\n    response: \"\",\n    responseToo: [],\n    post: {\n      stock: \"\",\n      like: false\n    },\n    post2: { stock1: \"\", like1: false, stock2: \"\", like2: false },\n    hello: \"\",\n    responseToPost: \"\"\n  };\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({ response: res.stockData }))\n  //     .catch(err => console.log(err));\n  // }\n  callApi = async e => {\n    e.preventDefault();\n\n    // build query parameters\n    var esc = encodeURIComponent;\n    var query = Object.keys(this.state.post)\n      .map(k => esc(k) + \"=\" + esc(this.state.post[k]))\n      .join(\"&\");\n\n    console.log(query);\n    const fullUrl = \"/api/stock-prices?\" + query;\n\n    const response = await fetch(fullUrl);\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    console.log(\"data return from `callApi`\");\n    console.log(body);\n    this.setState({ response: body });\n    return body;\n  };\n  callApiToo = async e => {\n    console.log(\"WHERE ARE MY LOGS?\");\n    e.preventDefault();\n\n    // build query parameters\n    var esc = encodeURIComponent;\n    var buildQuery = Object.keys(this.state.post2)\n      .map(k => esc(k) + \"=\" + esc(this.state.post2[k]))\n      .join(\"&\");\n\n    const query = buildQuery.replace(/\\d/g, \"\");\n\n    console.log(\"query\");\n    console.log(buildQuery.replace(/\\d/g, \"\"));\n\n    const response = await axios.get(`/api/stock-prices?${query}`);\n\n    // const body = await response.json();\n    if (response.status !== 200) throw Error(response.message);\n    console.log(\"ALL THAT SWEET DATA\");\n    console.log(response.data.stockData);\n    this.setState({ responseToo: response.data.stockData });\n    return response;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch(\"/api/world\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ post: this.state.post })\n    });\n    const body = await response.text();\n    this.setState({ responseToPost: body });\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <pre>{JSON.stringify(this.state, null, 2)}</pre>\n        <form name=\"stock_form\" id=\"stock_form\" onSubmit={this.callApi}>\n          <input\n            value={this.state.post.stock}\n            type=\"text\"\n            name=\"stock\"\n            id=\"stock\"\n            onChange={e =>\n              this.setState({ post: { stock: e.target.value, likes: false } })\n            }\n          />\n          <input\n            value={this.state.post.like}\n            type=\"checkbox\"\n            name=\"like\"\n            id=\"like\"\n            checked={this.state.post.like}\n            onChange={e =>\n              this.setState(prevState => ({\n                post: {\n                  stock: prevState.post.stock,\n                  like: !prevState.post.like\n                }\n              }))\n            }\n          />\n          <p>{this.state.response.stockSymbol}</p>\n          <p>{this.state.response.lastRefreshed}</p>\n          <p>{this.state.response.timeZone}</p>\n          <p>{this.state.response.dailyHigh}</p>\n          <button type=\"submit\">SUBMIT</button>\n        </form>\n\n        <form\n          name=\"two_stocks_form\"\n          id=\"two_stocks_form\"\n          onSubmit={this.callApiToo}\n        >\n          <input\n            name=\"stock1\"\n            value={this.state.post2.stock1}\n            onChange={e => {\n              e.preventDefault();\n              let { value } = e.target;\n              this.setState((prevState, props) => ({\n                post2: {\n                  stock1: value,\n                  like1: prevState.post2.like1,\n                  stock2: prevState.post2.stock2,\n                  like2: prevState.post2.like2\n                }\n              }));\n            }}\n            id=\"stock1\"\n            type=\"text\"\n          />\n\n          <input\n            name=\"stock2\"\n            value={this.state.post2.stock2}\n            onChange={e => {\n              e.preventDefault();\n              let { value } = e.target;\n              this.setState((prevState, props) => ({\n                post2: {\n                  stock1: prevState.post2.stock1,\n                  like1: prevState.post2.like1,\n                  stock2: value,\n                  like2: prevState.post2.like2\n                }\n              }));\n            }}\n            id=\"stock1\"\n            type=\"text\"\n          />\n\n          <input\n            value={this.state.post2.like2}\n            type=\"checkbox\"\n            name=\"like_both\"\n            id=\"like_both\"\n            checked={this.state.post2.like2}\n            onChange={e =>\n              this.setState(prevState => ({\n                post2: {\n                  stock1: prevState.post2.stock1,\n                  like1: !prevState.post2.like1,\n                  stock2: prevState.post2.stock2,\n                  like2: !prevState.post2.like2\n                }\n              }))\n            }\n          />\n          <button type=\"submit\">SUBMIT</button>\n        </form>\n\n        <form name=\"hello_form\" id=\"hello_form\" onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            type=\"text\"\n            name=\"hello\"\n            id=\"hello\"\n            value={this.state.hello}\n            onChange={e => this.setState({ hello: e.target.value })}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}