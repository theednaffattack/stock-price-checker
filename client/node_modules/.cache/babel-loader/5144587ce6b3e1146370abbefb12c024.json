{"ast":null,"code":"import _regeneratorRuntime from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/src/components/IssueTracker/IssueContainer.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Box, Button, Flex as FlexBase } from \"rebass\";\nimport { requestToApi } from \"react-data-fetching\";\nimport { borders, minHeight } from \"styled-system\";\nimport styled from \"styled-components\";\nimport { IssueForm } from \"./IssueForm\";\nvar Flex = styled(FlexBase)(_templateObject(), borders, minHeight);\nexport var IssueContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(IssueContainer, _Component);\n\n  function IssueContainer(props) {\n    var _this;\n\n    _classCallCheck(this, IssueContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(IssueContainer).call(this, props));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.handleFormSubmit = _this.handleFormSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      project: \"fcc-challenge\",\n      title: \"\",\n      text: \"\",\n      created_by: \"\",\n      assigned_to: \"\",\n      status_text: \"\",\n      issues: [],\n      response: {}\n    };\n    return _this;\n  }\n\n  _createClass(IssueContainer, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(event) {\n      event.preventDefault();\n      var _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function () {\n      var _handleFormSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var value, _this$state, title, text, created_by, assigned_to, status_text, formData, apiResponse;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                value = event.target.value;\n                alert(\"form submitted: \" + value);\n                console.log(\"calling api/issues\");\n                _this$state = this.state, title = _this$state.title, text = _this$state.text, created_by = _this$state.created_by, assigned_to = _this$state.assigned_to, status_text = _this$state.status_text;\n                formData = {\n                  title: title,\n                  text: text,\n                  created_by: created_by,\n                  assigned_to: assigned_to,\n                  status_text: status_text\n                };\n                _context.next = 8;\n                return requestToApi({\n                  url: \"/api/issues\",\n                  method: \"POST\",\n                  body: formData,\n                  headers: _defineProperty({}, \"Cache-Control\", \"no-cache\"),\n                  onTimeout: function onTimeout() {\n                    return console.log(\"⏱️ Timeout!\");\n                  },\n                  onProgress: function onProgress(progression) {\n                    return \"♻️ Progressing...\", progression;\n                  },\n                  // params: { page: 5, start: 0, limit: 20 },\n                  timeout: 2500\n                });\n\n              case 8:\n                apiResponse = _context.sent;\n                console.log(Object.keys(apiResponse));\n                console.log(apiResponse.data);\n                this.setState(function () {\n                  return {\n                    response: apiResponse.data\n                  };\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleFormSubmit(_x) {\n        return _handleFormSubmit.apply(this, arguments);\n      }\n\n      return handleFormSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var notIssues = this.state;\n      delete notIssues.issues;\n      return React.createElement(Flex, {\n        flexDirection: \"column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"IssueContainer\", React.createElement(IssueForm, {\n        submit: this.handleFormSubmit,\n        formState: notIssues,\n        inputState: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return IssueContainer;\n}(Component);","map":{"version":3,"sources":["/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/src/components/IssueTracker/IssueContainer.js"],"names":["React","Component","Box","Button","Flex","FlexBase","requestToApi","borders","minHeight","styled","IssueForm","IssueContainer","props","handleInputChange","bind","handleFormSubmit","state","project","title","text","created_by","assigned_to","status_text","issues","response","event","preventDefault","target","value","name","setState","alert","console","log","formData","url","method","body","headers","onTimeout","onProgress","progression","timeout","apiResponse","Object","keys","data","notIssues"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Box, Button, Flex as FlexBase } from \"rebass\";\nimport { requestToApi } from \"react-data-fetching\";\nimport { borders, minHeight } from \"styled-system\";\nimport styled from \"styled-components\";\n\nimport { IssueForm } from \"./IssueForm\";\n\nconst Flex = styled(FlexBase)`\n  ${borders}\n  ${minHeight}\n`;\n\nexport class IssueContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.state = {\n      project: \"fcc-challenge\",\n      title: \"\",\n      text: \"\",\n      created_by: \"\",\n      assigned_to: \"\",\n      status_text: \"\",\n      issues: [],\n      response: {}\n    };\n  }\n\n  handleInputChange(event) {\n    event.preventDefault();\n    let { value, name } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleFormSubmit(event) {\n    event.preventDefault();\n    let { value } = event.target;\n    alert(\"form submitted: \" + value);\n    console.log(\"calling api/issues\");\n    let { title, text, created_by, assigned_to, status_text } = this.state;\n    let formData = {\n      title,\n      text,\n      created_by,\n      assigned_to,\n      status_text\n    };\n    const apiResponse = await requestToApi({\n      url: `/api/issues`,\n      method: \"POST\",\n      body: formData,\n      headers: { [\"Cache-Control\"]: \"no-cache\" },\n      onTimeout: () => console.log(\"⏱️ Timeout!\"),\n      onProgress: progression => (\"♻️ Progressing...\", progression),\n      // params: { page: 5, start: 0, limit: 20 },\n      timeout: 2500\n    });\n    console.log(Object.keys(apiResponse));\n    console.log(apiResponse.data);\n    this.setState(() => ({ response: apiResponse.data }));\n  }\n  render() {\n    let notIssues = this.state;\n    delete notIssues.issues;\n    return (\n      <Flex flexDirection=\"column\">\n        IssueContainer\n        <IssueForm\n          submit={this.handleFormSubmit}\n          formState={notIssues}\n          inputState={this.handleInputChange}\n        />\n      </Flex>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}