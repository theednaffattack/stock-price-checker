{"ast":null,"code":"import _classCallCheck from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/src/components/Converter/FetchComponent.js\";\nimport React, { Component } from \"react\";\nimport { Box, Text } from \"rebass\";\nimport { Fetch } from \"react-data-fetching\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container() {\n    _classCallCheck(this, Container);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Container).apply(this, arguments));\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var searchString = \"20km\";\n      return React.createElement(Fetch, {\n        url: \"/api/convert?input=\".concat(searchString),\n        method: \"GET\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, function (_ref) {\n        var _ref$data = _ref.data,\n            initNum = _ref$data.initNum,\n            initUnit = _ref$data.initUnit,\n            returnNum = _ref$data.returnNum,\n            returnUnit = _ref$data.returnUnit,\n            string = _ref$data.string;\n        return React.createElement(Box, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11\n          },\n          __self: this\n        }, JSON.stringify(string, null, 2), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }));\n      });\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"sources":["/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/src/components/Converter/FetchComponent.js"],"names":["React","Component","Box","Text","Fetch","Container","searchString","data","initNum","initUnit","returnNum","returnUnit","string","JSON","stringify"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,QAA1B;AACA,SAASC,KAAT,QAAsB,qBAAtB;;IAEqBC,S;;;;;;;;;;;;;6BACV;AACP,UAAMC,YAAY,GAAG,MAArB;AACA,aACE,oBAAC,KAAD;AAAO,QAAA,GAAG,+BAAwBA,YAAxB,CAAV;AAAkD,QAAA,MAAM,EAAC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAA,6BAAGC,IAAH;AAAA,YAAWC,OAAX,aAAWA,OAAX;AAAA,YAAoBC,QAApB,aAAoBA,QAApB;AAAA,YAA8BC,SAA9B,aAA8BA,SAA9B;AAAA,YAAyCC,UAAzC,aAAyCA,UAAzC;AAAA,YAAqDC,MAArD,aAAqDA,MAArD;AAAA,eACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEGC,IAAI,CAACC,SAAL,CAAeF,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAFH,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,CADD;AAAA,OADH,CADF;AAWD;;;;EAdoCX,S;;SAAlBI,S","sourcesContent":["import React, { Component } from \"react\";\nimport { Box, Text } from \"rebass\";\nimport { Fetch } from \"react-data-fetching\";\n\nexport default class Container extends Component {\n  render() {\n    const searchString = \"20km\";\n    return (\n      <Fetch url={`/api/convert?input=${searchString}`} method=\"GET\">\n        {({ data: { initNum, initUnit, returnNum, returnUnit, string } }) => (\n          <Box>\n            {/* <Text>{data.name}</Text> */}\n            {JSON.stringify(string, null, 2)}\n            <Text />\n          </Box>\n        )}\n      </Fetch>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}