{"ast":null,"code":"import _classCallCheck from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/src/components/Converter/Converter.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { Box, Button, Flex as FlexBase } from \"rebass\";\nimport { borders, minHeight } from \"styled-system\";\nimport styled from \"styled-components\";\nimport Container from \"./FetchComponent\";\nvar Flex = styled(FlexBase)(_templateObject(), borders, minHeight);\nexport var Converter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Converter, _Component);\n\n  function Converter() {\n    _classCallCheck(this, Converter);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Converter).apply(this, arguments));\n  }\n\n  _createClass(Converter, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Flex, {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        width: [1],\n        border: \"1px red solid\",\n        minHeight: \"100vh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(Box, {\n        mx: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"convert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Convert Metric to Imperial units and vice versa\")), React.createElement(Box, {\n        mx: \"auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"convert\",\n        id: \"convert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"submit\")), React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Converter;\n}(Component);","map":{"version":3,"sources":["/Users/eddienaff/Private Folder/projects/web/fcc/infosec_qa_challenges/stock-challenge/client/src/components/Converter/Converter.js"],"names":["React","Component","Box","Button","Flex","FlexBase","borders","minHeight","styled","Container","Converter"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,IAAI,IAAIC,QAA9B,QAA8C,QAA9C;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,SAAP,MAAsB,kBAAtB;AAEA,IAAML,IAAI,GAAGI,MAAM,CAACH,QAAD,CAAT,oBACNC,OADM,EAENC,SAFM,CAAV;AAKA,WAAaG,SAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BACW;AACP,aACE,oBAAC,IAAD;AACE,QAAA,aAAa,EAAC,QADhB;AAEE,QAAA,cAAc,EAAC,QAFjB;AAGE,QAAA,KAAK,EAAE,CAAC,CAAD,CAHT;AAIE,QAAA,MAAM,EAAC,eAJT;AAKE,QAAA,SAAS,EAAC,OALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADF,CAPF,EAYE,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,EAAE,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAZF,EAgBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBF,CADF;AAoBD;AAtBH;;AAAA;AAAA,EAA+BT,SAA/B","sourcesContent":["import React, { Component } from \"react\";\nimport { Box, Button, Flex as FlexBase } from \"rebass\";\nimport { borders, minHeight } from \"styled-system\";\nimport styled from \"styled-components\";\n\nimport Container from \"./FetchComponent\";\n\nconst Flex = styled(FlexBase)`\n  ${borders}\n  ${minHeight}\n`;\n\nexport class Converter extends Component {\n  render() {\n    return (\n      <Flex\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        width={[1]}\n        border=\"1px red solid\"\n        minHeight=\"100vh\"\n      >\n        <Box mx=\"auto\">\n          <label htmlFor=\"convert\">\n            Convert Metric to Imperial units and vice versa\n          </label>\n        </Box>\n        <Box mx=\"auto\">\n          <input type=\"text\" name=\"convert\" id=\"convert\" />\n          <Button>submit</Button>\n        </Box>\n        <Container />\n      </Flex>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}